<Header>
    <Parent> Root
    <Title> 文法一覧
    <CreatedAt> 2018/9/19
    <Tag> 軽量マークアップ言語, ライブラリ, 文法, New
    <Summary>
        
        ここでは, OutlineTextの文法を示していきます.
        基本的に`Markdown`と似せています.
        
        
        
        
        
    </Summary>
</Header>
# 段落
_____________________
    # 基本的な書き方
        ```xml
        
            段落は, 多くのマークアップ言語と同様に, 特別なマークアップは不要です.
            行を連続して書くことで, その行ブロックが段落になります.
            
            段落を分けるときは, このように空行を挟みます.
            
        ```
        
        [実行結果]
        ==========
            段落は, 多くのマークアップ言語と同様に, 特別なマークアップは不要です.
            行を連続して書くことで, その行ブロックが段落になります.
            
            段落を分けるときは, このように空行を挟みます.
        ==========
    
    # 改行
        ```xml
            バックスラッシュ`\`を行末に書くと, 改行になります. \
            サザエさんの家系図を見ると, \
            サザエはフネの娘で, \
            タラオはサザエの息子である \
            ことが分かった.
        ```
        
        [実行結果]
        ==========
            バックスラッシュ`\`を行末に書くと, 改行になります. \
            サザエさんの家系図を見ると, \
            サザエはフネの娘で, \
            タラオはサザエの息子である \
            ことが分かった.
        ==========

# 見出し
____________________
    
    # 通常の見出し
        
        ```xml
            # Section
                # SubSection
                    # SubSubSection
        ```
        
        [実行結果]
        ==========
            # Section
                # SubSection
                    # SubSubSection
        ==========
    
        セクションの見出しは`#`で始めます.
        
        セクションのレベルはインデントの数で決まります.
    
    # そのほかの見出し
        ```xml
            # もちろん`#`での見出しも可能
            
            次の行に`_`, `-`, `=`を連ねてでの見出しも可能
            __________________________
            
            `-`での見出し
            --------------------------
            
            `=`での見出し
            ==========================
            
            # もちろん`#`との組み合わせも可能です
            __________________________
        ```
        
        [実行結果]
        ==========
            # もちろん`#`での見出しも可能
            
            次の行に`_`, `-`, `=`を連ねてでの見出しも可能
            __________________________
            
            `-`での見出し
            --------------------------
            
            `=`での見出し
            ==========================
            
            # もちろん`#`との組み合わせも可能です
            __________________________
        ==========
    
    
# セクション
_____________________
    
    ```xml
        このフォーマットにはセクションというものがあります.
        
        このように同じインデント数で始まる要素は同じセクションになります.
        
            インデントのレベルが一つ上がると, セクションの階層が一つ上がります.
        
        インデントをもとに戻すと, また同じセクションに戻ります.
        
        # 見出し
            セクションが一つ上がる前に, 見出しを付けるのが通例です.
    ```
    
    [実行結果]
    ==========
        このフォーマットにはセクションというものがあります.
        
        このように同じインデント数で始まる要素は同じセクションになります.
        
            インデントのレベルが一つ上がると, セクションの階層が一つ上がります.
        
        インデントをもとに戻すと, また同じセクションに戻ります.
        
        # 見出し
            セクションが一つ上がる前に, 見出しを付けるのが通例です.
    ==========
    
# リスト
_________________
    
    # 順序なしリスト
        
        ```xml
            * レベル1
                * レベル2
            * 長い文字の場合は
            そのまま連続して次の行に書ける
                * レベル2
        ```

        [実行結果]
        ==========
            * レベル1
                * レベル2
            * 長い文字の場合は
            そのまま連続して次の行に書ける
                * レベル2
        ==========
        
    # 順序ありリスト
        ```xml
            1. レベル1
                1.1. レベル2
            2. レベル1
        ```
        
        [実行結果]
        ==========
            1. レベル1
                1.1. レベル2
            2. レベル1
        ==========

        `(番号).`で番号付きリストになります.
        
        最後の`.`を忘れないでください.
        
    # ツリーリスト
        ```xml
            + root
                + file
                + folder
                    + file
        ```
        
        [実行結果]
        ==========
            + root
                + file
                + folder
                    + file
        ==========

    # 組み合わせ
        ```xml
            * リスト
                1. 順序
                2. 順序
            * リスト
                + ツリー
                    + ツリー
        ```
        
        [実行結果]
        ==========
            * リスト
                1. 順序
                2. 順序
            * リスト
                + ツリー
                    + ツリー
        ==========

# テーブル
______________

    # 横ラベル


        ```xml
            | ラベル0 | ラベル1 | ラベル2 |
            |---------|---------|---------|
            | A       | B       | C       |
            | D       | E       | F       |
        ```

        [実行結果]
        ==========
            | ラベル0 | ラベル1 | ラベル2 |
            |---------|---------|---------|
            | A       | B       | C       |
            | D       | E       | F       |
        ==========


    # 縦ラベル
        
        ```xml
            |---------||---|---|
            | ラベル0 || A | B |
            | ラベル1 || C | D |
            | ラベル2 || E | F |
        ```
        
        [実行結果]
        ==========
            |---------||---|---|
            | ラベル0 || A | B |
            | ラベル1 || C | D |
            | ラベル2 || E | F |
        ==========

    # 縦横ラベル

        ```xml
            | ラベル名 || 種類A | 種類B |
            |----------||-------|-------|
            | ラベル0  || A     | B     |
            | ラベル1  || C     | D     |
            | ラベル2  || E     | F     |
        ```

        [実行結果]
        ==========
            | ラベル名 || 種類A | 種類B |
            |----------||-------|-------|
            | ラベル0  || A     | B     |
            | ラベル1  || C     | D     |
            | ラベル2  || E     | F     |
        ==========
        

    # キャプション付き

        ```xml
            |[キャプション付き]
            |---------||---|---|
            | ラベル0 || A | B |
            | ラベル1 || C | D |
            | ラベル2 || E | F |
        ```
        
        [実行結果]
        ==========
            |[キャプション付き]
            |---------||---|---|
            | ラベル0 || A | B |
            | ラベル1 || C | D |
            | ラベル2 || E | F |
        ==========

# リンク
____________
    # 通常のリンク
        ```xml
            文章中にこのようにしてリンク[ContentsViewer](./)を張ることが可能です.
        ```
        
        [実行結果]
        ==========
            文章中にこのようにしてリンク[ContentsViewer](./)を張ることが可能です.
        ==========
        
    # インラインアンカー
        ```xml
            # [[sugoi-title]] すごいタイトル
                上のようにアンカーを用意して,
                
                このようにページ内で[リンク](#sugoi-title)を張ることが可能です.
        ```
        
        [実行結果]
        ==========
            # [[sugoi-title]] すごいタイトル
                上のようにアンカーを用意して,
                
                このようにページ内で[リンク](#sugoi-title)を張ることが可能です.
        ==========
# 画像
_____________

    ```xml
        ![OutlineText](CURRENT_DIR/Images/Logo.png)
    ```

    [実行結果]
    ==========
        ![OutlineText](CURRENT_DIR/Images/Logo.png)
    ==========

# テキストフォーマット
______________________
    # 重要句
        
        ```xml
            文章内で**重要性, 深刻性, 緊急性**を持つ句があるとき`**`で挟みます.
        ```
        
        [実行結果]
        ==========
            文章内で**重要性, 深刻性, 緊急性**を持つ句があるとき`**`で挟みます.
        ==========
        
    
    # アクセント句
        ```xml
            文章内で//(アクセント)//を持たせたい句があるとき`//`で挟みます.
            アクセント句の場所で__その文の意味が変わること__に注意してください.
        ```
        
        [実行結果]
        ==========
            文章内で//(アクセント)//を持たせたい句があるとき`//`で挟みます.
            アクセント句の場所で__その文の意味が変わること__に注意してください.
        ==========
    
    
    # マーカー
        
        ```xml
            文章内で読み手, 書き手に__意識を向けたい部分__には`__`で挟みます.
            文章の重要性などには関係はなくただ__目立たせること__に注意してください.
            参考書などに__マーカー__を引く行為に近いです.
        ```
    
        [実行結果]
        ==========
            文章内で読み手, 書き手に__意識を向けたい部分__には`__`で挟みます.
            文章の重要性などには関係はなくただ__目立たせること__に注意してください.
            参考書などに__マーカー__を引く行為に近いです.
        ==========
    
    
    # 打消し線
        ```xml
            文章内で打消し線を使用するときは, ~~打ち消したい部分~~を`~~`で囲みます.
        ```
        
        [実行結果]
        ==========
            文章内で打消し線を使用するときは, ~~打ち消したい部分~~を`~~`で囲みます.
        ==========

# コード
___________________
    # インライン
        
        ```xml
            文章中にこのようにして`Code表記する`ことが可能です.
            
            コード表記内のhtmlタグ`<p>`や, 
            このフォーマットのマークアップ`[ContentsViewer](./)`は無視されます. 
            
            `コード表記内の文字&<>`は自動でエスケープされます.
        ```
    
        [実行結果]
        ==========
            文章中にこのようにして`Code表記する`ことが可能です.
            
            コード表記内のhtmlタグ`<p>`や, 
            このフォーマットのマークアップ`[ContentsViewer](./)`は無視されます. 
            
            `コード表記内の文字&<>`は自動でエスケープされます.
        ==========


    # ブロック
        ```xml
            このようにして`バッククオートx3`でコードブロックを挿入することができます.
            
            `バッククオートx3`の後ろに属性を追加することでコードをハイライトすることが可能です.
            
            ```cpp
                #include <iostream>
            
                using namespace std;
                
                int main(){
                    cout << "Hello World!" << endl;
                
                    return 0;
                }
            ```
        ```
        
        [実行結果]
        ==========
            このようにして`バッククオートx3`でコードブロックを挿入することができます.
            
            `バッククオートx3`の後ろに属性を追加することでコードをハイライトすることが可能です.
            
            ```cpp
                #include <iostream>
            
                using namespace std;
                
                int main(){
                    cout << "Hello World!" << endl;
                
                    return 0;
                }
            ```
        ==========
        

        コードブロックのスタイルに関してですが, ここでは外部ライブラリ`SyntaxHighlighter`を使用しています.
        導入は本家サイト[SyntaxHighlighter](http://alexgorbatchev.com/SyntaxHighlighter/)を参照してください.

        コードハイライトの種類は`SyntaxHighlighter`が対応しているものと同じです.

# ブロック
__________________
    
    ```xml
        [補足事項]
        =======================
            ボックスの中では, __通常通りマークアップが使用可能__です.
            
            [入れ子]
            ============
                ボックスを入れ子にすることが可能です.
            ============
        
        =======================
        
        [ボックスのスタイル :: NOTE]
        ==============
            ボックスのタイトルの横に属性を追加することが可能です.
            
            省略時は, `NOTE`が適用されます.
            
            このほかにも, `CAUTION`, `WARNING`があります.
            
            [:: CAUTION]
            ============
                注意ボックス
            ============
            
            [:: WARNING]
            ============
                警告ボックス
            ============
            
            [:: NOTE]
            =========
                タイトルを省略すると, 属性名がそのままタイトルになります.
            =========
            
        
        ==============
    ```
    
    [実行結果]
    ==========
        [補足事項]
        =======================
            ボックスの中では, __通常通りマークアップが使用可能__です.
            
            [入れ子]
            ============
                ボックスを入れ子にすることが可能です.
            ============
        
        =======================
        
        [ボックスのスタイル :: NOTE]
        ==============
            ボックスのタイトルの横に属性を追加することが可能です.
            
            省略時は, `NOTE`が適用されます.
            
            このほかにも, `CAUTION`, `WARNING`があります.
            
            [:: CAUTION]
            ============
                注意ボックス
            ============
            
            [:: WARNING]
            ============
                警告ボックス
            ============
            
            [:: NOTE]
            =========
                タイトルを省略すると, 属性名がそのままタイトルになります.
            =========
            
        
        ==============
    ==========
    
    
# 文献参照
_______________________________________________

    ```xml
        このようにして参考にした部分にラベルを振り\[label1]ます.
        
        * 東京都にサザエさん通りがある\[wiki1]のが知られているが, 私は知らなかった.
        * 「諸君　私は戦争が好きだ」\[movie1]
        
        文章最後で文献リストを列挙すると振られたラベルとリンクされます.
        
        文献リストは, 参照された順番に並び替えられます.
        
        参照されなかった文献は表示されません.
        
        ----------------------------------------------
        [label1]: 文献の詳細
        [movie1]: Hellsingアニメ 少佐
        [wiki1]: [wikipedia](https://ja.wikipedia.org/wiki/%E3%82%B5%E3%82%B6%E3%82%A8%E3%81%95%E3%82%93)
    
    ```
    
    [実行結果]
    ==========
        このようにして参考にした部分にラベルを振り\[label1]ます.
        
        * 東京都にサザエさん通りがある\[wiki1]のが知られているが, 私は知らなかった.
        * 「諸君　私は戦争が好きだ」\[movie1]
        
        文章最後で文献リストを列挙すると振られたラベルとリンクされます.
        
        文献リストは, 参照された順番に並び替えられます.
        
        参照されなかった文献は表示されません.
        
        ----------------------------------------------
        [label1]: 文献の詳細
        [movie1]: Hellsingアニメ 少佐
        [wiki1]: [wikipedia](https://ja.wikipedia.org/wiki/%E3%82%B5%E3%82%B6%E3%82%A8%E3%81%95%E3%82%93)
    
    ==========


# 数式
_________________________________________
    # インライン
        ```xml
        
            有名なオイラーの公式は，$e^{i\theta}=\cos\theta+i\sin\theta$ です.

        ```
        
        [実行結果]
        ==========
            
            有名なオイラーの公式は，$e^{i\theta}=\cos\theta+i\sin\theta$ です.
        
        ==========
    
    # 別行立て
        ```xml
            
            式\eqref{eq:Homogeneous-Transformation}は同次変換の式です. ローカル座標系からワールド座標系への変換です.
            
            ```math
                \begin{align}
                \left[ \begin{matrix} x_w \\ y_w \\ z_w \\ 1 \end{matrix} \right]
                = 
                \left[ \begin{matrix} R_{xx} & R_{xy} & R_{xz} & T_x \\
                                        R_{yx} & R_{yy} & R_{yz} & T_y \\
                                        R_{zx} & R_{zy} & R_{zz} & T_z \\
                                        0    & 0    & 0    & 1 \end{matrix} \right]
                \left[ \begin{matrix} x \\ y \\ z \\ 1 \end{matrix} \right]
                \label{eq:Homogeneous-Transformation}
                \end{align}
                
            ```
        
        ```
        
        [実行結果]
        ==========
            
            式\eqref{eq:Homogeneous-Transformation}は同次変換の式です. ローカル座標系からワールド座標系への変換です.
            
            ```math
                \begin{align}
                \left[ \begin{matrix} x_w \\ y_w \\ z_w \\ 1 \end{matrix} \right]
                = 
                \left[ \begin{matrix} R_{xx} & R_{xy} & R_{xz} & T_x \\
                                        R_{yx} & R_{yy} & R_{yz} & T_y \\
                                        R_{zx} & R_{zy} & R_{zz} & T_z \\
                                        0    & 0    & 0    & 1 \end{matrix} \right]
                \left[ \begin{matrix} x \\ y \\ z \\ 1 \end{matrix} \right]
                \label{eq:Homogeneous-Transformation}
                \end{align}
                
            ```
        
        ==========
    
    
    数式は外部ライブラリ`MathJax`を用いることで実現しています.
    MathJaxは, html内にあるLateX表記された数式を通常の数式に変換するライブラリです.
    MathJaxに関する詳しい説明と導入方法は本家サイト[MathJax](https://www.mathjax.org/)を参照してください.


# コメント
_________________________________________
    ```xml
        ここまで何か本文が書かれて,
        
        <!-- コメントしたい文章 -->
        上のコメント文は表示されません.
        
        <!-- 
            複数行にまたがるような
            コメントにも対応しています.
        -->
        
    
        記事本文<!-- に埋まっているコメント -->はコメントアウトされません.

    ```
    
    [実行結果]
    ==========
        ここまで何か本文が書かれて,
        
        <!-- コメントしたい文章 -->
        上のコメント文は表示されません.
        
        <!-- 
            複数行にまたがるような
            コメントにも対応しています.
        -->
        
    
        記事本文<!-- に埋まっているコメント -->はコメントアウトされません.

    ==========
    

# 自動エスケープ
_________________________________________
    ```xml
        本文中, コード内に含まれる, <, >, &は自動的にエスケープされます.
        
        ただし, 本文中においてhtmlタグとして機能する<br><b>bold</b>
        などは, エスケープされません.
    ```
    
    [実行結果]
    ==========
        本文中, コード内に含まれる, <, >, &は自動的にエスケープされます.
        
        ただし, 本文中においてhtmlタグとして機能する<br><b>bold</b>
        などは, エスケープされません.
    ==========


# Htmlタグ
_________________________________________________________________

    ```xml
        本文でhtmlタグを使用することは可能です.
        
        <p>
            このように, pタグで段落を生成することが可能になったりします.
        </p>
        
        <div>
            <p>
                入れ子になっている要素から<button>ボタン</button>を出したりできます.
            </p>
            
            <p>ただし, __いかなるこのフォーマットのマークアップ__が機能しないことに注意しましょう.</p>
        </div>
        
        |----------|------|
        | 頑張れば | <ul>
                        <li>セル内にリスト</li>
                        <li>を入れることが可能です</li>
                    </ul> |
            
    ```
    
    [実行結果]
    ==========
        本文でhtmlタグを使用することは可能です.
        
        <p>
            このように, pタグで段落を生成することが可能になったりします.
        </p>
        
        <div>
            <p>
                入れ子になっている要素から<button>ボタン</button>を出したりできます.
            </p>
            
            <p>ただし, __いかなるこのフォーマットのマークアップ__が機能しないことに注意しましょう.</p>
        </div>
    
        |----------|------|
        | 頑張れば | <ul>
                        <li>セル内にリスト</li>
                        <li>を入れることが可能です</li>
                    </ul> |
            
    ==========
    
    [::WARNING]
    ===========
        閉じタグが存在するものは必ずそれで閉じてください.
        htmlタグから出たことを認知できません...
    ===========

# テキスト置換
________________
    
    |[テキスト置換表]
    | テキスト || 置き換え後 |
    |----------||------------|
    | `(C)`    || (C)        |
    | `(R)`    || (R)        |
    | `(TM)`   || (TM)       |
    | `--`     || --        |
    | `...`    || ...       |
    | `->`     || ->        |
    | `=>`     || =>        |
    | `<-`     || <-        |
    | `<=`     || <=        |
    | `'`      || '         |
    


